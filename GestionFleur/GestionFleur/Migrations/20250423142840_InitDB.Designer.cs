// <auto-generated />
using GestionFleur.ViewModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionFleur.Migrations
{
    [DbContext(typeof(GestionFleurContext))]
    [Migration("20250423142840_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionFleur.Models.Bouquet", b =>
                {
                    b.Property<int>("BouquetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouquetId"));

                    b.Property<string>("MessageCarte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("float");

                    b.HasKey("BouquetId");

                    b.ToTable("Bouquets");
                });

            modelBuilder.Entity("GestionFleur.Models.BouquetsCommandes", b =>
                {
                    b.Property<int>("BouquetCommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouquetCommandeId"));

                    b.Property<int>("BouquetId")
                        .HasColumnType("int");

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.Property<int>("quantite")
                        .HasColumnType("int");

                    b.HasKey("BouquetCommandeId");

                    b.HasIndex("BouquetId");

                    b.HasIndex("CommandeId");

                    b.ToTable("BouquetsCommandes");
                });

            modelBuilder.Entity("GestionFleur.Models.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommandeId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("PaiementEffectue")
                        .HasColumnType("bit");

                    b.Property<double>("TotalTransaction")
                        .HasColumnType("float");

                    b.Property<int>("TypeDePaiement")
                        .HasColumnType("int");

                    b.Property<int>("VendeurId")
                        .HasColumnType("int");

                    b.HasKey("CommandeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("VendeurId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("GestionFleur.Models.Fleur", b =>
                {
                    b.Property<int>("FleurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FleurId"));

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("float");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("FleurId");

                    b.ToTable("Fleurs");
                });

            modelBuilder.Entity("GestionFleur.Models.FleursBouquets", b =>
                {
                    b.Property<int>("BouquetFleursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouquetFleursId"));

                    b.Property<int>("BouquetId")
                        .HasColumnType("int");

                    b.Property<int>("FleurId")
                        .HasColumnType("int");

                    b.Property<int>("quantite")
                        .HasColumnType("int");

                    b.HasKey("BouquetFleursId");

                    b.HasIndex("BouquetId");

                    b.HasIndex("FleurId");

                    b.ToTable("FleursBouquets");
                });

            modelBuilder.Entity("GestionFleur.Models.FleursCommandes", b =>
                {
                    b.Property<int>("BouquetCommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouquetCommandeId"));

                    b.Property<int>("CommandeId")
                        .HasColumnType("int");

                    b.Property<int>("FleurId")
                        .HasColumnType("int");

                    b.Property<int>("quantite")
                        .HasColumnType("int");

                    b.HasKey("BouquetCommandeId");

                    b.HasIndex("CommandeId");

                    b.HasIndex("FleurId");

                    b.ToTable("FleursCommandes");
                });

            modelBuilder.Entity("GestionFleur.Models.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilisateurId"));

                    b.Property<string>("Identifiant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UtilisateurId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("GestionFleur.Models.BouquetsCommandes", b =>
                {
                    b.HasOne("GestionFleur.Models.Bouquet", "Bouquet")
                        .WithMany("Commandes")
                        .HasForeignKey("BouquetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Commande", "Commande")
                        .WithMany("Bouquets")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bouquet");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("GestionFleur.Models.Commande", b =>
                {
                    b.HasOne("GestionFleur.Models.Utilisateur", "Client")
                        .WithMany("CommandesClient")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Utilisateur", "Vendeur")
                        .WithMany("CommandesASuperviser")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Vendeur");
                });

            modelBuilder.Entity("GestionFleur.Models.FleursBouquets", b =>
                {
                    b.HasOne("GestionFleur.Models.Bouquet", "Bouquet")
                        .WithMany("Fleurs")
                        .HasForeignKey("BouquetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Fleur", "Fleur")
                        .WithMany("Bouquets")
                        .HasForeignKey("FleurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bouquet");

                    b.Navigation("Fleur");
                });

            modelBuilder.Entity("GestionFleur.Models.FleursCommandes", b =>
                {
                    b.HasOne("GestionFleur.Models.Commande", "Commande")
                        .WithMany("Fleurs")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Fleur", "Fleur")
                        .WithMany("Commandes")
                        .HasForeignKey("FleurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commande");

                    b.Navigation("Fleur");
                });

            modelBuilder.Entity("GestionFleur.Models.Bouquet", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Fleurs");
                });

            modelBuilder.Entity("GestionFleur.Models.Commande", b =>
                {
                    b.Navigation("Bouquets");

                    b.Navigation("Fleurs");
                });

            modelBuilder.Entity("GestionFleur.Models.Fleur", b =>
                {
                    b.Navigation("Bouquets");

                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("GestionFleur.Models.Utilisateur", b =>
                {
                    b.Navigation("CommandesASuperviser");

                    b.Navigation("CommandesClient");
                });
#pragma warning restore 612, 618
        }
    }
}
