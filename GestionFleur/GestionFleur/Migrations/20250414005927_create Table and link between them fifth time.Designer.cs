// <auto-generated />
using GestionFleur.ViewModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionFleur.Migrations
{
    [DbContext(typeof(GestionFleurContext))]
    [Migration("20250414005927_create Table and link between them fifth time")]
    partial class createTableandlinkbetweenthemfifthtime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BouquetCommande", b =>
                {
                    b.Property<string>("BouquetsBouquetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CommandesCommandeId")
                        .HasColumnType("int");

                    b.HasKey("BouquetsBouquetId", "CommandesCommandeId");

                    b.HasIndex("CommandesCommandeId");

                    b.ToTable("BouquetCommande");
                });

            modelBuilder.Entity("BouquetFleur", b =>
                {
                    b.Property<string>("BouquetsBouquetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FleursFleurId")
                        .HasColumnType("int");

                    b.HasKey("BouquetsBouquetId", "FleursFleurId");

                    b.HasIndex("FleursFleurId");

                    b.ToTable("BouquetFleur");
                });

            modelBuilder.Entity("CommandeFleur", b =>
                {
                    b.Property<int>("CommandesCommandeId")
                        .HasColumnType("int");

                    b.Property<int>("FleursFleurId")
                        .HasColumnType("int");

                    b.HasKey("CommandesCommandeId", "FleursFleurId");

                    b.HasIndex("FleursFleurId");

                    b.ToTable("CommandeFleur");
                });

            modelBuilder.Entity("GestionFleur.Models.Bouquet", b =>
                {
                    b.Property<string>("BouquetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MessageCarte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("float");

                    b.HasKey("BouquetId");

                    b.ToTable("Bouquets");
                });

            modelBuilder.Entity("GestionFleur.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GestionFleur.Models.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommandeId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("VendeurId")
                        .HasColumnType("int");

                    b.Property<int>("VendeursId")
                        .HasColumnType("int");

                    b.HasKey("CommandeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("VendeurId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("GestionFleur.Models.Facture", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactureId"));

                    b.Property<double>("TotalTransaction")
                        .HasColumnType("float");

                    b.Property<int>("TypeDePaiement")
                        .HasColumnType("int");

                    b.Property<bool>("paiementEffectue")
                        .HasColumnType("bit");

                    b.HasKey("FactureId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("GestionFleur.Models.Fleur", b =>
                {
                    b.Property<int>("FleurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FleurId"));

                    b.Property<string>("couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantite")
                        .HasColumnType("int");

                    b.HasKey("FleurId");

                    b.ToTable("Fleurs");
                });

            modelBuilder.Entity("GestionFleur.Models.Fournisseur", b =>
                {
                    b.Property<int>("FournisseurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FournisseurId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FournisseurId");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("GestionFleur.Models.Proprietaire", b =>
                {
                    b.Property<int>("ProprietaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProprietaireId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProprietaireId");

                    b.ToTable("Proprietaires");
                });

            modelBuilder.Entity("GestionFleur.Models.Vendeur", b =>
                {
                    b.Property<int>("VendeurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendeurId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendeurId");

                    b.ToTable("Vendeurs");
                });

            modelBuilder.Entity("BouquetCommande", b =>
                {
                    b.HasOne("GestionFleur.Models.Bouquet", null)
                        .WithMany()
                        .HasForeignKey("BouquetsBouquetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Commande", null)
                        .WithMany()
                        .HasForeignKey("CommandesCommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BouquetFleur", b =>
                {
                    b.HasOne("GestionFleur.Models.Bouquet", null)
                        .WithMany()
                        .HasForeignKey("BouquetsBouquetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Fleur", null)
                        .WithMany()
                        .HasForeignKey("FleursFleurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommandeFleur", b =>
                {
                    b.HasOne("GestionFleur.Models.Commande", null)
                        .WithMany()
                        .HasForeignKey("CommandesCommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Fleur", null)
                        .WithMany()
                        .HasForeignKey("FleursFleurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionFleur.Models.Commande", b =>
                {
                    b.HasOne("GestionFleur.Models.Client", "Client")
                        .WithMany("Commandes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFleur.Models.Vendeur", "Vendeur")
                        .WithMany("Commandes")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Vendeur");
                });

            modelBuilder.Entity("GestionFleur.Models.Client", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("GestionFleur.Models.Vendeur", b =>
                {
                    b.Navigation("Commandes");
                });
#pragma warning restore 612, 618
        }
    }
}
